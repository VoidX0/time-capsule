name: Docker Image CI
on:
  push:
    branches:
      - main # 推送到主分支时触发
    paths:
      - 'api/**'
      - 'web/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      IMAGE: time-capsule # 镜像名称

    steps:
      - name: Checkout repository # 签出代码
        uses: actions/checkout@v4

      - name: Convert owner to lowercase # 转换仓库所有者
        id: set-owner
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "OWNER=$OWNER" >> $GITHUB_ENV
          echo "Registry owner set to: $OWNER"

      - name: Extract package version # 提取 package.json 中的版本号
        id: package-version
        run: |
          PACKAGE_VERSION=$(jq -r '.version' web/package.json)
          # 替换为Docker兼容的版本格式（替换无效字符）
          VERSION=$(echo "$PACKAGE_VERSION" | tr -cd '[:alnum:].-_')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"

      #      - name: Set up QEMU # 启用 QEMU 支持, 以支持多架构构建，如 linux/arm64
      #        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx # 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry # 登录到 GitHub 容器注册表
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image # 构建并推送 Docker 镜像
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.OWNER }}/${{ env.IMAGE }}:latest
            ghcr.io/${{ env.OWNER }}/${{ env.IMAGE }}:${{ env.VERSION }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
